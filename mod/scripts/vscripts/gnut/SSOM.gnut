untyped
#if SERVER
global function GetPlayerUID
global function GetPlayerUIDByName

global function GetPlayerByUID
global function IsValidUID
#endif

#if CLIENT
global function GetPlayerPing
#endif

global function GetAllPlayers
global function GetPlayerByName
global function IsValidPlayerName
global function GetBotArray
global function GetPlayerByNamePrefix
global function GetPlayersByNamePrefix

global function hasNonDigit
global function isdigit


#if SERVER
string function GetPlayerUID(entity player)
{
    return player.GetUID()
}

string function GetPlayerUIDByName(string playerName)
{
    return GetPlayerByName(playerName).GetUID()
}

entity function GetPlayerByUID(string userId)
{
    foreach (player in GetPlayerArray())
    {
        if ( player.GetUID() == userId )
        {
            return player
        }
    }
    return null
}

bool function IsValidUID(string userId)
{
    foreach (player in GetPlayerArray())
    {
        if ( player.GetUID() == userId )
        {
            return true
        }
    }
    return false
}
#endif

#if CLIENT
int function GetPlayerPing(entity player)
{
    if(player == GetLocalClientPlayer())
    {
        return MyPing()
    }
    else
    {
        return player.GetPlayerGameStat(PGS_PING)
    }
    return -1
}

int function GetPing(entity player)
{
    return GetPlayerPing(player)
}
#endif

array<entity> function GetAllPlayers()
{
    return GetPlayerArray()
}

entity function GetPlayerByName(string playerName)
{
    foreach (player in GetPlayerArray())
    {
        if ( player.GetPlayerName() == playerName )
        {
            return player
        }
    }
    return null
}

bool function IsValidPlayerName(string playerName)
{
    foreach (player in GetPlayerArray())
    {
        if ( player.GetPlayerName() == playerName )
        {
            return true
        }
    }
    return false
}

array<entity> function GetBotArray()
{
    array<entity> bots = []
    foreach (player in GetPlayerArray())
    {
        if (player.IsBot())
        {
            bots.append(player)
        }
    }
    return bots
}

entity function GetPlayerByNamePrefix(string namePrefix)
{
    string searchTerm = namePrefix.tolower()
    
    foreach(player in GetPlayerArray())
    {
        string playerName = player.GetPlayerName().tolower()
        
        if(StartsWith(playerName,searchTerm))
        {
            return player
        }
    }
    
    return null
}

array<entity> function GetPlayersByNamePrefix(string namePrefix)
{
    array<entity> matchingPlayers = []
    string searchTerm = namePrefix.tolower()
      
    foreach(player in GetPlayerArray())
    {
        string playerName = player.GetPlayerName().tolower()
        
        if(StartsWith(playerName,searchTerm))
        {
            matchingPlayers.append(player)
        }
    }
    
    return matchingPlayers
}

bool function hasNonDigit(str) {
    foreach(ch in str)
    {
        if(ch < '0' || ch > '9')
        {
            return true
        }
    }
    return false
}

bool function isdigit(ch)
{
    return ch >= '0' && ch <= '9'
}