global function ServerChatCommands_Init

global function AddServerChatCommandCallback
global function IsServerChatCommandRegistered
global function RemoveServerChatCommandCallback


table< string, void functionref(entity, array<string>) > chatCommandCallbacks = {}

void function ServerChatCommands_Init()
{
    AddCallback_OnReceivedSayTextMessage(OnReceivedSayTextMessage)
}

ClServer_MessageStruct function OnReceivedSayTextMessage(ClServer_MessageStruct message)
{
    entity player = message.player
    string chatText = message.message

    array<string> words = split(chatText, " ")
    string command = words[0]

    if( command in chatCommandCallbacks )
    {
        array<string> args = words.slice(1)
        thread chatCommandCallbacks[command](player, args)
        message.shouldBlock = true
    }

    return message
}

void function AddServerChatCommandCallback(string command, void functionref(entity player, array<string> args) func)
{
    if( command == "" )
        return
    if ( func == null )
        return
    if( command in chatCommandCallbacks )
        return
    chatCommandCallbacks[command] <- func
}

bool function IsServerChatCommandRegistered(string command)
{
    if( command == "" )
        return false
    return (command in chatCommandCallbacks)
}

void function RemoveServerChatCommandCallback(string command)
{
    if( command == "" )
        return
    if( command in chatCommandCallbacks )
    {
        delete chatCommandCallbacks[command]
    }
}